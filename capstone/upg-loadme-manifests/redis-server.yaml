apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: demo
data:
  redis.conf: |
    dir /var/lib/redis
    appendonly yes
    protected-mode no

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: redis-pv
  namespace: demo
spec:
  storageClassName: ""
  awsElasticBlockStore:
     fsType: xfs
     volumeID: "vol-0564c35eb771a6781"
  capacity:
     storage: 1Gi
  accessModes:
     - ReadWriteOnce
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: demo
spec:
  storageClassName: "" # Empty string must be explicitly set otherwise default StorageClass will be set
  volumeName: redis-pv
  accessModes:
     - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: demo
  labels:
    app: redis
spec:
  type: ClusterIP
  ports:
  - name: redis-app
    port: 6379
    targetPort: redis
  clusterIP: None
  selector:
    app: redis
    statefulset.kubernetes.io/pod-name: redis-0
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-server
  namespace: demo
spec:
  selector:
    matchLabels: 
      app: redis-app
  serviceName: 'redis-service'
  replicas: 1
  template:
    metadata:
      labels:
        app: redis-app
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: redis-app
          image: redis
          args:
            - /etc/redis/redis.conf
          volumeMounts:
            - mountPath: /var/lib/redis
              name: dir 
              readOnly: false
          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 200Mi
          ports:
            - containerPort: 6379
              name: redis
      volumes:
        - name: redis-config 
          configMap:
            name: redis-config
        - name: dir
          persistentVolumeClaim:
             claimName: redis-pvc

